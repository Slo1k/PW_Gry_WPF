@page "/producer/{producerId:int}"
@inject KrakowiakKozlowski.Games.INTERFACES.IDAO DAO
@inject NavigationManager NavManager
@using UI.WEB.Components

<PageTitle>
    Producer - @producerId
</PageTitle>

<div class="wrapper">
    @if(producer is null) 
    {
    <h1>
        No producer of ID: @producerId
    </h1>
    }
    @if(producer is not null)
    {
    <h1>
        @producer.Name
    </h1>
    <div
        style="width: 50%; font-size: 18px"
    >
        <div
            style="display: flex; justify-content: space-between; width: 100%"
        >
            <div>
                Country:
            </div>
            <div>
                @producer.Country
            </div>
        </div>
    </div>
    <div 
        style="width: 50%; display: flex; gap: 10px; justify-content: center"
    >
        <button 
            class="details-btn edit"
            @onclick="NavigateToEdit"
        >
            edit
        </button>
        <button 
            class="details-btn remove"
            @onclick="ShowRemoveConfirmation"
        >
            remove
        </button>
    </div>
    }
</div>
@if(isConfirmModalOpen) {
    <ConfirmModal 
        OnConfirm="HandleConfirm"
        OnCancel="HandleCancel" 
    >
        Are you sure you want to remove <strong>"@producer.Name"</strong>? 
    </ConfirmModal>
}

@code {
    [Parameter] public int producerId { get; set; }
    private KrakowiakKozlowski.Games.INTERFACES.IProducer? producer;
    private bool isConfirmModalOpen = false;
    private void NavigateToEdit()
    {
        NavManager.NavigateTo("/editproducer/" + producerId);
    }
    private void ShowRemoveConfirmation()
    {
        isConfirmModalOpen = true;
    }
    private void HandleCancel()
    {
        isConfirmModalOpen = false;
    }
    private void HandleConfirm()
    {
        if (producer != null)
        {
            DAO.RemoveProducer(producer.Id);
        }

        isConfirmModalOpen = false;
        NavManager.NavigateTo("/producers");
    }
    protected override void OnInitialized()
    {
        producer = DAO.GetProducerById(producerId);
    }
}