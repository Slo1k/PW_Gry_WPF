@page "/game/{gameId:int}"
@using KrakowiakKozlowski.Games.BL
@using KrakowiakKozlowski.Games.UI.WEB.Components
@inject NavigationManager NavManager

<PageTitle>
    Game - @gameId
</PageTitle>

<div class="wrapper">
    @if(game is null) 
    {
    <h1>
        No game of ID: @gameId
    </h1>
    }
    @if(game is not null)
    {
    <h1>
        @game.Title
    </h1>
    <div
        style="width: 50%; font-size: 18px"
    >
        <div
            style="display: flex; justify-content: space-between; width: 100%"
        >
            <div>
                Producer:
            </div>
            <div>
                @game.Producer.Name
            </div>
        </div>
        <div
            style="display: flex; justify-content: space-between; width: 100%"
        >
            <div>
                Released:
            </div>
            <div>
                @game.ReleaseYear
            </div>
        </div>
        <div
            style="display: flex; justify-content: space-between; width: 100%"
        >
            <div>
                Score:
            </div>
            <div>
                @game.Score
            </div>
        </div>
        <div
            style="display: flex; justify-content: space-between; width: 100%"
        >
            <div>
                Genre:
            </div>
            <div>
                @game.Genre
            </div>
        </div>
    </div>
    <div 
        style="width: 50%; display: flex; gap: 10px; justify-content: center"
    >
        <button 
            class="details-btn edit"
            @onclick="NavigateToEdit"
        >
            edit
        </button>
        <button 
            class="details-btn remove"
            @onclick="ShowRemoveConfirmation"
        >
            remove
        </button>
    </div>
    }
</div>
@if(isConfirmModalOpen) {
    <ConfirmModal 
        OnConfirm="HandleConfirm"
        OnCancel="HandleCancel" 
    >
        Are you sure you want to remove <strong>"@game.Title"</strong>? 
    </ConfirmModal>
}

@code {
    [Parameter] public int gameId { get; set; }
    private KrakowiakKozlowski.Games.INTERFACES.IGame? game;
    private bool isConfirmModalOpen = false;

    DataAccess dataAccess;

    public Game()
    {
        dataAccess = Singleton.Instance;
    }

    private void NavigateToEdit()
    {
        NavManager.NavigateTo("/editgame/" + gameId);
    }
    private void ShowRemoveConfirmation()
    {
        isConfirmModalOpen = true;
    }
    private void HandleCancel()
    {
        isConfirmModalOpen = false;
    }
    private void HandleConfirm()
    {
        if (game != null)
        {
            dataAccess.DAO.RemoveGame(game.Id);
        }

        isConfirmModalOpen = false;
        NavManager.NavigateTo("/games");
    }
    protected override void OnInitialized()
    {
        game = dataAccess.DAO.GetGameById(gameId);
    }
}